<?php
/**
 * @file
 * Provides the installation hooks.
 */

use Drupal\trezor_connect\TrezorConnect;

/**
 * Implements hook_requirements().
 *
 * @param $phase
 *
 * @return array
 */
function trezor_connect_requirements($phase) {
  $output = array();

  $value = phpversion();
  $min = '5.3.0';

  $result = version_compare($value, $min);

  if ($result < 0) {
    $description = <<<EOF
You must be running PHP 5.3.0 with the OpenSSL extension which contains the
openssl_random_pseudo_bytes function used to generate cryptographically secure
random numbers.
EOF;

    $description = t($description);

    $output['trezor_connect_php'] = array(
      'title' => t('PHP'),
      'value' => $value,
      'description' => $description,
      'severity' => REQUIREMENT_ERROR,
    );
  }

  $result = extension_loaded('gmp');

  if (!$result) {
    $text = t('the GMP extension');
    $path = 'http://php.net/gmp';

    $url = Url::fromUri($path);
    $link = \Drupal::l($text, $url);

    $args = array();

    $args['@link'] = $link;

    $description = <<<EOF
The TREZOR connect module requires @link to correctly implement the Bitcoin
ECDSA.
EOF;

    $description = t($description, $args);

    $output['trezor_connect_gmp'] = array(
      'title' => t('GMP Extension'),
      'value' => t('Not installed'),
      'description' => $description,
      'severity' => REQUIREMENT_ERROR,
    );
  }

  $result = extension_loaded('openssl');

  if (!$result) {
    $text = t('the OpenSSL extension');
    $path = 'http://php.net/openssl';

    $url = Url::fromUri($path);
    $link = \Drupal::l($text, $url);

    $args = array();

    $args['@link'] = $link;

    $description = <<<EOF
The TREZOR connect module requires @link to generate cryptographically secure
random numbers.
EOF;

    $description = t($description, $args);

    $output['trezor_connect_openssl'] = array(
      'title' => t('OpenSSL Extension'),
      'value' => t('Not installed'),
      'description' => $description,
      'severity' => REQUIREMENT_ERROR,
    );
  }

  return $output;
}

/**
 * Implements hook_schema().
 */
function trezor_connect_schema() {
  $output = array();

  $output['trezor_connect_challenges'] = array(
    'description' => t('Provides the TREZOR connect challenges.'),
    'fields' => array(
      'id' => array(
        'description' => 'Provides the primary key used to identify this item internally',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'created' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Provides the record creation timestamp.',
      ),
      'challenge_hidden' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
      'challenge_visual' => array(
        'type' => 'varchar',
        'length' => 64,
      ),
    ),
    'primary key' => array('id'),
  );

  $output['trezor_connect_challenge_responses'] = array(
    'description' => t('Provides the TREZOR connect challenge responses.'),
    'fields' => array(
      'id' => array(
        'description' => 'Provides the primary key used to identify this item internally',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'created' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Provides the record creation timestamp.',
      ),
      'challenge_id' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Provides the challenge id.',
      ),
      'public_key' => array(
        'type' => 'varchar',
        'length' => 255,
      ),
      'signature' => array(
        'type' => 'varchar',
        'length' => 255,
      ),
      'version' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Provides the challenge response version.',
      ),
    ),
    'primary key' => array('id'),
  );

  $output['trezor_connect_mappings'] = array(
    'description' => t('Provides the TREZOR connect mappings.'),
    'fields' => array(
      'id' => array(
        'description' => 'Provides the primary key used to identify this item internally',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'created' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Provides the record creation timestamp.',
      ),
      'uid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'Provides the user id.',
        'default' => 0,
      ),
      'challenge_response_id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'Provides the challenge response id.',
        'default' => 0,
      ),
    ),
    'primary key' => array('id'),
    'unique keys' => array(
      'uid' => array(
        'uid',
      ),
    ),
  );

  return $output;
}
