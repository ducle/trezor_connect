services:
  # cache context
  cache_context.trezor_connect_challenge:
    class: Drupal\trezor_connect\Cache\Context\TrezorConnectChallengeCacheContext
    arguments: ['@trezor_connect.challenge_manager']
    tags:
      - { name: cache.context}
  # cache tables
  #cache.trezor_connect_challenges:
  #  class: Drupal\Core\Cache\CacheBackendInterface
  #  tags:
  #    - { name: cache.bin }
  #  factory: cache_factory:get
  #  arguments: ['trezor_connect_challenges']
  # challenge services
  trezor_connect.challenge:
    class: Drupal\trezor_connect\Challenge\Challenge
  trezor_connect.challenge_manager_factory:
    class: Drupal\trezor_connect\Challenge\ChallengeManagerFactory
    arguments: ['@settings', '@config.factory', '@request_stack', '@session', '%trezor_connect_challenge_backends%', '%trezor_connect_challenge_backend%', '@trezor_connect.challenge', '@cache_tags.invalidator']
    calls:
      - [setContainer, ['@service_container']]
  trezor_connect.challenge_manager:
    class: Drupal\trezor_connect\Challenge\ChallengeManager
    factory: trezor_connect.challenge_manager_factory:get
  trezor_connect.challenges.backend.database:
    class: Drupal\trezor_connect\Challenge\ChallengeBackendDatabase
    arguments: ['@database']
    tags:
      - { name: trezor_connect_challenge_backend, title: 'Database', priority: 0, default: 1 }
  # challenge response services
  trezor_connect.challenge_response:
    class: Drupal\trezor_connect\ChallengeResponse\ChallengeResponse
  trezor_connect.challenge_response_manager_factory:
    class: Drupal\trezor_connect\ChallengeResponse\ChallengeResponseManagerFactory
    arguments: ['@settings', '@config.factory', '@session', '@request_stack', '%trezor_connect_challenge_response_backends%', '%trezor_connect_challenge_response_backend%', '@trezor_connect.challenge_response', '@trezor_connect.challenge_manager']
    calls:
      - [setContainer, ['@service_container']]
  trezor_connect.challenge_response_manager:
    class: Drupal\trezor_connect\ChallengeResponse\ChallengeResponseManager
    factory: trezor_connect.challenge_response_manager_factory:get
  trezor_connect.challenge_responses.backend.database:
    class: Drupal\trezor_connect\ChallengeResponse\ChallengeResponseBackendDatabase
    arguments: ['@database', '@trezor_connect.challenge_manager']
    tags:
      - { name: trezor_connect_challenge_response_backend, title: 'Database', priority: 0, default: 1 }
  # challenge validator service
  trezor_connect.challenge_validator:
    class: Drupal\trezor_connect\ChallengeValidator\ChallengeValidator
  # mapping services
  trezor_connect.mapping_manager_factory:
    class: Drupal\trezor_connect\Mapping\MappingManagerFactory
    arguments: ['@settings', '@config.factory', '%trezor_connect_mapping_backends%', '%trezor_connect_mapping_backend%', '@trezor_connect.challenge_manager', '@trezor_connect.challenge_response_manager']
    calls:
      - [setContainer, ['@service_container']]
  trezor_connect.mapping_manager:
    class: Drupal\trezor_connect\Mapping\MappingManager
    factory: trezor_connect.mapping_manager_factory:get
  trezor_connect.mappings.backend.database:
    class: Drupal\trezor_connect\Mapping\MappingBackendDatabase
    arguments: ['@database', '@trezor_connect.challenge_response_manager']
    tags:
      - { name: trezor_connect_mapping_backend, title: 'Database', priority: 0, default: 1 }
  # helper service
  trezor_connect:
    class: Drupal\trezor_connect\TrezorConnect
    arguments: ['@current_user', '@session', '@config.factory', '@theme_handler', '@trezor_connect.challenge_manager', '@trezor_connect.challenge_response_manager', '@trezor_connect.mapping_manager', '%trezor_connect_challenge_backends%', '%trezor_connect_challenge_backend%', '%trezor_connect_challenge_response_backends%', '%trezor_connect_challenge_response_backend%', '%trezor_connect_mapping_backends%', '%trezor_connect_mapping_backend%']
